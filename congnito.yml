AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  AuthName:
    Type: String
    Description: Unique Name for Cognito Resources
    Default: TodoApp
Resources:
  UserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: !Sub ${AuthName}-user-pool
      AutoVerifiedAttributes:
        - email
      MfaConfiguration: "OFF"
      Schema:
        -
          Name: email
          AttributeDataType: String
          Mutable: true
          Required: true

      Policies:
        PasswordPolicy:
          RequireLowercase: false
          RequireSymbols: false
          RequireNumbers: false
          MinimumLength: 8
          RequireUppercase: false

  UserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    DependsOn: UserPool
    Properties:
      ClientName: !Sub ${AuthName}-client
      GenerateSecret: false
      UserPoolId:
        Ref: UserPool
      ReadAttributes:
        - email
        - name
        - phone_number
      WriteAttributes:
        - email
        - name
        - phone_number

  IdentityPool:
    Type: "AWS::Cognito::IdentityPool"
    Properties:
      IdentityPoolName: !Sub ${AuthName}_identity
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        -
          ProviderName: !GetAtt UserPool.ProviderName
          ClientId: !Ref UserPoolClient

  AuthedUserRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Action: "sts:AssumeRoleWithWebIdentity"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref IdentityPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": "authenticated"
      Policies:
        -
          PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action: [ "mobileanalytics:PutEvents", "cognito-sync:*", "cognito-identity:*" ]
                Resource: "*"

  UnauthedUserRole:
    Type: "AWS::IAM::Role"
    DependsOn: IdentityPool
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Action: "sts:AssumeRoleWithWebIdentity"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref IdentityPool
              "ForAnyValue:StringLike":
               "cognito-identity.amazonaws.com:amr": "unauthenticated"
      Policies:
        -
          PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action: [ "mobileanalytics:PutEvents", "cognito-sync:*" ]
                Resource: "*"

  IdentityPoolRoles:
    Type: "AWS::Cognito::IdentityPoolRoleAttachment"
    DependsOn: [ IdentityPool, AuthedUserRole, UnauthedUserRole ]
    Properties:
      IdentityPoolId: !Ref IdentityPool
      Roles:
        authenticated: !GetAtt AuthedUserRole.Arn
        unauthenticated: !GetAtt UnauthedUserRole.Arn

Outputs:
  UserPoolId:
    Value: !Ref UserPool
  UserPoolArn:
    Value: !GetAtt UserPool.Arn
  UserPoolWebClientId:
    Value: !Ref UserPoolClient
  IdentityPoolId:
    Value: !Ref IdentityPool
